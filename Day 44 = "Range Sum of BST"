/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        vector<int> v;
        int sum =0;
        preTraversal(root,v,low,high,sum);
        return sum;
    }
    void preTraversal(TreeNode* root,vector<int> v,int low, int high,int &sum){
        if(root!=NULL){
            // cout<<root->val<<endl;   
            if(root->val<=high && root->val>=low){
                sum+=root->val;
            }      
            preTraversal(root->left,v,low,high,sum);
            
            preTraversal(root->right,v,low,high,sum);
              
        }
    }
